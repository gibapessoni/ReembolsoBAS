Sistema de Gest√£o de Reembolsos BAS

Um sistema para gerenciar solicita√ß√µes de reembolso de despesas m√©dicas, com perfis de administrador, RH, gerente RH e empregado.

üìã Pr√©-requisitos

.NET 7.0 SDK

Node.js (opcional para frontend)

Configura√ß√£o do Banco de Dados

Execute o SQL Server

Crie o banco ReembolsoBAS

Ajuste a connection string em appsettings.json:

"ConnectionStrings": {
  "DefaultConnection": "Server=seu_servidor;Database=ReembolsoBAS;User Id=seu_user;Password=sua_senha;"
}

No terminal:

dotnet ef database update

üöÄ Instala√ß√£o e Configura√ß√£o

1. Clonar o Reposit√≥rio

git clone https://github.com/gibapessoni/ReembolsoBAS.git
cd ReembolsoBAS

2. Configurar JWT em Desenvolvimento

Para manter a chave secreta fora do c√≥digo:

dotnet user-secrets init
# Gere uma chave de 32 bytes em Base64:
[Convert]::ToBase64String((New-Object System.Security.Cryptography.RNGCryptoServiceProvider).GetBytes(32))
# Copie o valor e ent√£o:

dotnet user-secrets set "Jwt:Key" "<sua_chave_base64>"

3. Vari√°vel de Ambiente em Produ√ß√£o

No servidor de produ√ß√£o, defina a vari√°vel de ambiente Jwt__Key:

Windows (PowerShell):

setx Jwt__Key "<sua_chave_base64>"

Linux/macOS:

export Jwt__Key="<sua_chave_base64>"

N√£o deixe o valor real de Jwt:Key no appsettings.json, deixe-o em branco ou inexistente no arquivo.

"Jwt": {
  "Key": ""
}

4. Executar a API

dotnet restore
dotnet build
dotnet run

A aplica√ß√£o ir√° escutar em https://localhost:7143.

üîë Gera√ß√£o de Token JWT

Crie um usu√°rio no banco (Exemplo SQL):

/* 1. Cria o empregado e guarda o Id gerado */
DECLARE @EmpregadoId INT;

INSERT INTO Empregados (Matricula, Nome, Diretoria, Superintendencia, Cargo, Ativo, ValorMaximoMensal)
VALUES ('ADM001', 'Administrador', 'TI', 'TI', 'Admin', 1, 5000.00);

SET @EmpregadoId = SCOPE_IDENTITY();   -- Id rec√©m-gerado

/* 2. Cria o usu√°rio apontando para esse empregado */
INSERT INTO Usuarios (EmpregadoId, Matricula, Nome, Email, SenhaHash, Perfil)
VALUES (@EmpregadoId,
        'ADM001',
        'Administrador',
        'admin@empresa.com',
        '$2a$12$TYMY0OpUBq6z45N95IdWveetu..48P040dUKHGBPCK3sA6JmoleGe', -- Senha123!
        'admin');


Fa√ßa login para obter o token:

curl -X POST https://localhost:7143/api/Auth/login \
  -H "Content-Type: application/json" \
  -d '{"Email":"admin@empresa.com","Senha":"Senha123!"}'

A resposta conter√°:

{
  "token": "eyJ...",
  "perfil": "admin",
  "matricula": "ADM001",
  "nome": "Administrador"
}

Use esse token em chamadas protegidas:

curl -H "Authorization: Bearer eyJ..." https://localhost:7143/api/Empregados

üìÑ Endpoints Principais

POST /api/Auth/login ‚Äì Autentica usu√°rio e gera JWT.

GET  /api/Empregados ‚Äì Lista empregados (rh, admin).

POST /api/Reembolsos/solicitar ‚Äì Cria requisi√ß√£o de reembolso (empregado).

POST /api/Reembolsos/validar/{id} ‚Äì Valida reembolso (rh).

POST /api/Reembolsos/aprovar/{id} ‚Äì Aprova reembolso (gerente RH).